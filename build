#!/bin/bash

BCMD="$1"
BBT="$2"

CFG="builder/configs/"
BCFG="builder/configs/board/"

activate_config () {
    source config/iotfapOS.conf
    source templates/board/"$BBT"/board.conf
    
    rm -rf "$CFG"* builder/system/skeleton/* output/*
    
    cp -R config/* "$CFG"
    cp -R templates/skeleton/default/* builder/system/skeleton/
    cp -R templates/board/"$BBT" "$BCFG"
    cp -R "$BCFG"skeleton/* builder/system/skeleton/

    cat "$CFG"build.conf > "$CFG"iotfapos_defconfig
    cat "$CFG"board/board.conf >> "$CFG"iotfapos_defconfig
    cat "$CFG"iotfapOS.conf >> "$CFG"iotfapos_defconfig
    cat "$BCFG"config/linux.conf >> "$CFG"iotfapos_defconfig
    cat "$BCFG"config/uboot.conf >> "$CFG"iotfapos_defconfig
    cat "$CFG"mydevice.conf >> "$CFG"iotfapos_defconfig
    cat "$BCFG"config/apps.conf >> "$CFG"iotfapos_defconfig
    cat "$CFG"app-templates.conf >> "$CFG"iotfapos_defconfig
    
    cd builder && make iotfapos_defconfig
    cd ..
    
    echo "Build config for $BBT ready"
}


clean_config () {
    cd builder && make clean && make distclean
}

download_config () {
    activate_config
    cd builder && make source
}

edit_config () {
    activate_config
    cd builder && make menuconfig
}

make_config () {
    cd builder && make
}

helpme () {
    echo 'Use:'
    echo './build command board-template'
    echo ' '
    echo 'Build Commands'
    echo '   [s]etup - configures build system for selected board ready for use'
    echo '   [a]ll - configures and builds all output images for selected board'
    echo '   [l]inux - builds linux kernel for selected board #TODO'
    echo '   [u]boot - builds uboot for selected board #TODO'
    echo '   [c]orefs - builds corefs for selected board #TODO'
    echo '   [o]emfs - buildsoemfs for selected board #TODO'
    echo '   [d]ownload - downloads all sources for selected build'
    echo '   [e]dit - configures selected board and edit config'
    echo '   [r]ebuild - (re)builds current custom config'
    echo '   [x]clean - cleans build environment, board template not needed'
    echo ' '
    echo 'Available board-templates (required):'
    ls templates/board/*/board.conf | cut -d '/' -f 3 | sed 's/^/   /g' | grep -v template
    echo ' '
}

####
if [ -f templates/board/"$BBT"/board.conf ]; then
    case "$BCMD" in
        a|all)
            activate_config
            make_config
            ;;
        s|setup)
            activate_config
            ;;
        d|download)
            download_config
            ;;
        e|edit)
            edit_config
            ;;
        r|rebuild)
            make_config
            ;;
        *)
            helpme
            ;;
    esac
else
    case "$BCMD" in
        x|clean)
            clean_config
        ;;
        *)
            helpme
        ;;
    esac
fi


